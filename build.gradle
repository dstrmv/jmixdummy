buildscript {
    dependencies {
        classpath('com.google.cloud.tools:jib-spring-boot-extension-gradle:0.1.0')
    }
}

plugins {
    id 'io.jmix' version '1.1.4'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.2.0'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.1.3'
}

group = 'com.haulmont.bulychevid'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-themes-compiled'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "org.postgresql:postgresql"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    //implementation 'io.jmix.cuba:jmix-cuba-starter'
    implementation 'io.jmix.dynattr:jmix-dynattr-starter'
    implementation 'io.jmix.dynattr:jmix-dynattr-ui-starter'

    // cluster
    implementation 'com.hazelcast:hazelcast:5.0.2'
    implementation 'com.hazelcast:hazelcast-kubernetes:2.2.3'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

test {
    useJUnitPlatform()
}

jib {
    from {
        //image = "docker://custom-docker-dev.haulmont.com/infra/projects/liberica-openjdk-alpine-libreoffice:11"
        image = "docker://bellsoft/liberica-openjdk-alpine:11"
    }
    container {
        appRoot = "/app"
        creationTime = "USE_CURRENT_TIMESTAMP"
        format = "OCI"
        user = "1000:1000"
        ports = ['8080', '5000', '5701']
        workingDirectory = "/workspace"
    }
    pluginExtensions {
        pluginExtension {
            implementation = 'com.google.cloud.tools.jib.gradle.extension.springboot.JibSpringBootExtension'
        }
    }
}

bootBuildImage {
    imageName = 'jmixdummy:latest'
}